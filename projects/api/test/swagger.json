{
  "swagger" : "2.0",
  "info" : {
    "description" : "",
    "version" : "0.2.40",
    "title" : "AnyMind API",
    "termsOfService" : ""
  },
  "host" : "",
  "basePath" : "/",
  "tags" : [ {
    "name" : "account"
  }, {
    "name" : "activities"
  }, {
    "name" : "adminpanel"
  }, {
    "name" : "serviceUsageEvent"
  }, {
    "name" : "employment"
  }, {
    "name" : "files"
  }, {
    "name" : "invitation"
  }, {
    "name" : "invoices"
  }, {
    "name" : "payments"
  }, {
    "name" : "payouts"
  }, {
    "name" : "presence"
  }, {
    "name" : "profile"
  }, {
    "name" : "promoCodes"
  }, {
    "name" : "ratel"
  }, {
    "name" : "recoverPassword"
  }, {
    "name" : "registration"
  }, {
    "name" : "search"
  }, {
    "name" : "service"
  }, {
    "name" : "session"
  }, {
    "name" : "finances"
  }, {
    "name" : "version"
  }, {
    "name" : "views"
  }, {
    "name" : "widget"
  }, {
    "name" : "ws"
  } ],
  "paths" : {
    "/api/accounts/exists/email/{email}" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Check if email is taken",
        "description" : "",
        "operationId" : "getAccountEmailExistsRoute",
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "description" : "Email",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Email exists"
          },
          "404" : {
            "description" : "Email does not exist"
          }
        }
      }
    },
    "/api/accounts/{accountId}" : {
      "patch" : {
        "tags" : [ "account" ],
        "summary" : "Partial update account",
        "description" : "",
        "operationId" : "patchUpdateAccountRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Account to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatchAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/accounts/confirm/email/{token}" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Confirm email",
        "description" : "",
        "operationId" : "postAccountVerifyEmailRoute",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Confirmation token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSessionWithAccount"
            }
          }
        }
      }
    },
    "/api/accounts/confirm/email/invitation/{invitationToken}" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Confirm email",
        "description" : "",
        "operationId" : "postConfirmEmailViaInvitationRoute",
        "parameters" : [ {
          "name" : "invitationToken",
          "in" : "path",
          "description" : "Invitation token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Account"
            }
          }
        }
      }
    },
    "/api/activities/profile/expert" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get activities for expert profile",
        "description" : "",
        "operationId" : "getExpertProfileActivitiesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivities"
            }
          }
        }
      }
    },
    "/api/activities/profile/organization" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get activities for organization profile",
        "description" : "",
        "operationId" : "getOrganizationProfileActivitiesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "ActivityFilter",
          "required" : false,
          "type" : "string",
          "enum" : [ "EMPLOYEES", "FREELANCE" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivities"
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/profile" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get activity for profile",
        "description" : "",
        "operationId" : "getProfileActivityRoute",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "activityId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivity"
            }
          }
        }
      }
    },
    "/api/activities/important/client" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get important activities for client",
        "description" : "",
        "operationId" : "getClientImportantActivitiesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetClientActivities"
            }
          }
        }
      }
    },
    "/api/activities/important/profile/expert" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get important activities for expert profile",
        "description" : "",
        "operationId" : "getExpertProfileImportantActivitiesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivities"
            }
          }
        }
      }
    },
    "/api/activities/important/profile/organization" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get important activities for organization profile",
        "description" : "",
        "operationId" : "getOrganizationProfileImportantActivitiesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivities"
            }
          }
        }
      }
    },
    "/api/activities/important/counters" : {
      "get" : {
        "tags" : [ "activities" ],
        "summary" : "Get counters of important activities",
        "description" : "",
        "operationId" : "getImportantActivitiesCountersRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetImportantActivitiesCounters"
            }
          }
        }
      }
    },
    "/api/activities/{activityId}/unimportant/client" : {
      "put" : {
        "tags" : [ "activities" ],
        "summary" : "Mark client activity as unimportant",
        "description" : "",
        "operationId" : "putUnimportantClientActivityRoute",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "activityId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Activity marked as unimportant"
          }
        }
      }
    },
    "/api/activities/{activityId}/unimportant/profile" : {
      "put" : {
        "tags" : [ "activities" ],
        "summary" : "Mark profile activity as unimportant",
        "description" : "",
        "operationId" : "putUnimportantProfileActivityRoute",
        "parameters" : [ {
          "name" : "activityId",
          "in" : "path",
          "description" : "activityId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Activity marked as unimportant"
          }
        }
      }
    },
    "/api/adminpanel/session" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get adminpanel session",
        "description" : "",
        "operationId" : "getCurrentSessionRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Admin Panel session",
            "schema" : {
              "$ref" : "#/definitions/AdminPanelSession"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Login to admin panel using email and password",
        "description" : "",
        "operationId" : "postLoginRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdminPanelLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/AdminPanelSession"
            }
          },
          "401" : {
            "description" : "Not authorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Logout from current adminpanel session",
        "description" : "",
        "operationId" : "logoutCurrentSessionRoute",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Logged out"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/adminpanel/invoices" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of partner invoices",
        "description" : "",
        "operationId" : "getPartnerInvoicesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetInvoice"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/profiles" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of profiles",
        "description" : "",
        "operationId" : "getProfilesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetProfile"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/profiles/payout" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of profiles ready for payout",
        "description" : "",
        "operationId" : "getProfilesWithPayoutDetailsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetProfileWithPayoutDetails"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/technical-issues" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of technical issues",
        "description" : "",
        "operationId" : "getTechnicalIssuesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetTechnicalProblem"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/client-activities" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of client activities",
        "description" : "",
        "operationId" : "getClientActivitiesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetClientActivity"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/account-activities" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get lists of account activities",
        "description" : "",
        "operationId" : "getAccountActivitiesRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "query",
          "description" : "UUID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetActivities"
            }
          }
        }
      }
    },
    "/api/adminpanel/activity-details" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get call activity details",
        "description" : "",
        "operationId" : "postActivityDetailsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AdminPanelLogin"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetCallDetails"
            }
          }
        }
      }
    },
    "/api/adminpanel/counters" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get counters",
        "description" : "",
        "operationId" : "getCountersRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetCounters"
            }
          }
        }
      }
    },
    "/api/adminpanel/profiles/{profileId}/balance" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get profile balance",
        "description" : "",
        "operationId" : "getProfileBalanceRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "Profile ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetProfileBalance"
            }
          }
        }
      }
    },
    "/api/adminpanel/profiles/{profileId}/payout" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Generate payout for given profile",
        "description" : "",
        "operationId" : "postPayoutRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "ProfileId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostPayout"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetPayout"
            }
          }
        }
      }
    },
    "/api/adminpanel/accounts" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "List all adminpanel accounts",
        "description" : "",
        "operationId" : "getAccountsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetAdminPanelAccount"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Add adminpanel account",
        "description" : "",
        "operationId" : "postAccountRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostAdminPanelAccount"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Adminpanel account added"
          }
        }
      }
    },
    "/api/adminpanel/accounts/password" : {
      "put" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Update account's password",
        "description" : "",
        "operationId" : "putPasswordRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutPassword"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Account's password updated"
          }
        }
      }
    },
    "/api/adminpanel/accounts/role" : {
      "put" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Update account's role",
        "description" : "",
        "operationId" : "putRoleRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutRole"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Account's role updated"
          }
        }
      }
    },
    "/api/adminpanel/comments-report/{commentId}/accept" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Accept comment report",
        "description" : "",
        "operationId" : "postAcceptCommentReportRoute",
        "parameters" : [ {
          "name" : "commentId",
          "in" : "path",
          "description" : "commentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          }
        }
      }
    },
    "/api/adminpanel/comments-report/{commentId}/reject" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Reject comment report",
        "description" : "",
        "operationId" : "postRejectCommentReportRoute",
        "parameters" : [ {
          "name" : "commentId",
          "in" : "path",
          "description" : "commentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          }
        }
      }
    },
    "/api/adminpanel/am-accounts/{accountId}/block" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Block account",
        "description" : "",
        "operationId" : "postAccountBlockRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Account blocked"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/adminpanel/am-accounts/{accountId}/unblock" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Unblock account",
        "description" : "",
        "operationId" : "postAccountUnblockRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Account unblocked"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/adminpanel/am-accounts/{accountId}/enable-free-service" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Enable creating free services",
        "description" : "",
        "operationId" : "postEnableCreateFreeServiceRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/adminpanel/am-accounts/{accountId}/disable-free-service" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Disable creating free services",
        "description" : "",
        "operationId" : "postDisableCreateFreeServiceRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/adminpanel/am-accounts/{accountId}" : {
      "delete" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Delete user's account",
        "description" : "",
        "operationId" : "deleteAccountRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Account ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/technical-problem" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get technical problem for specified sueId",
        "description" : "",
        "operationId" : "getTechnicalProblemRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get technical problem",
            "schema" : {
              "$ref" : "#/definitions/GetTechnicalProblem"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Store information about technical problems during call",
        "description" : "",
        "operationId" : "postTechnicalProblemRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostTechnicalProblem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/comments/{commentId}/answer" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Create comment answer",
        "description" : "",
        "operationId" : "postCommentAnswerRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "commentId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostCommentAnswer"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/comments/{commentId}/report" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Create comment report",
        "description" : "",
        "operationId" : "postCommentReportRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "commentId",
          "in" : "path",
          "description" : "commentId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostCommentReport"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/comments" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Create comment",
        "description" : "",
        "operationId" : "postCommentRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostComment"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/adminpanel/client-complaints" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get complaints rejected by experts",
        "description" : "",
        "operationId" : "getAdminClientComplaintsRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "ClientComplaintStatus",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "REJECTED_BY_EXPERT", "ACCEPTED_BY_EXPERT", "REJECTED_BY_ADMIN", "ACCEPTED_BY_ADMIN", "CANCELLED", "IGNORED_BY_EXPERT" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetClientComplaint"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/client-complaints/{sueId}/accept" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Accept client complaint",
        "description" : "",
        "operationId" : "postAdminAcceptComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint accepted"
          }
        }
      }
    },
    "/api/adminpanel/client-complaints/{sueId}/reject" : {
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Reject client complaint",
        "description" : "",
        "operationId" : "postAdminRejectComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint rejected"
          }
        }
      }
    },
    "/api/adminpanel/expert-complaints" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get list of expert complaints",
        "description" : "",
        "operationId" : "getExpertComplaintsRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetExpertComplaint"
              }
            }
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/client-complaint" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get client complaint",
        "description" : "",
        "operationId" : "getClientComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get client complaint",
            "schema" : {
              "$ref" : "#/definitions/GetClientComplaint"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Create client complaint",
        "description" : "",
        "operationId" : "postClientComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostClientComplaint"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint created"
          }
        }
      },
      "delete" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Cancel client complaint",
        "description" : "",
        "operationId" : "deleteClientComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint deleted"
          }
        }
      }
    },
    "/api/service-usage-event/client-complaints/expert" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get all client complaints for expert",
        "description" : "",
        "operationId" : "getClientComplaintsForExpertRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetClientComplaint"
              }
            }
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/client-complaint/expert" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get client complaint for expert",
        "description" : "",
        "operationId" : "getClientComplaintForExpertRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get client complaint",
            "schema" : {
              "$ref" : "#/definitions/GetClientComplaint"
            }
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/client-complaint/expert/accept" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Accept client complaint",
        "description" : "",
        "operationId" : "postExpertAcceptComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint accepted"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/client-complaint/expert/reject" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Reject client complaint",
        "description" : "",
        "operationId" : "postExpertRejectComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostExpertRejectComplaint"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Complaint rejected"
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/expert-complaint" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get expert complaint",
        "description" : "",
        "operationId" : "getExpertComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get expert complaint",
            "schema" : {
              "$ref" : "#/definitions/GetExpertComplaint"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Store expert's complaint about client",
        "description" : "",
        "operationId" : "postExpertComplaintRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostExpertComplaint"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/employments" : {
      "get" : {
        "tags" : [ "employment" ],
        "summary" : "List of employees profile details with their employments",
        "description" : "",
        "operationId" : "getEmployeesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ExpertProfileWithEmployments"
              }
            }
          }
        }
      }
    },
    "/api/employments/{employmentId}/comments" : {
      "get" : {
        "tags" : [ "employment" ],
        "summary" : "List comments for employment",
        "description" : "",
        "operationId" : "getEmploymentCommentsRoute",
        "parameters" : [ {
          "name" : "employmentId",
          "in" : "path",
          "description" : "employmentId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetComment"
              }
            }
          }
        }
      }
    },
    "/api/employments/delete" : {
      "post" : {
        "tags" : [ "employment" ],
        "summary" : "Delete employments",
        "description" : "",
        "operationId" : "deleteEmploymentsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "employeeIds",
          "description" : "employeeIds",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteEmployments"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Employments deleted"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/employments/{employmentId}" : {
      "delete" : {
        "tags" : [ "employment" ],
        "summary" : "Delete employment",
        "description" : "",
        "operationId" : "deleteEmploymentRoute",
        "parameters" : [ {
          "name" : "employmentId",
          "in" : "path",
          "description" : "employmentId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Employment deleted"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/employments/service/{serviceId}" : {
      "delete" : {
        "tags" : [ "employment" ],
        "summary" : "Delete user employment for service",
        "description" : "",
        "operationId" : "deleteEmploymentForServiceRoute",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "serviceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Employment deleted"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/files/token" : {
      "post" : {
        "tags" : [ "files" ],
        "summary" : "Create file token",
        "description" : "",
        "operationId" : "createFileTokenRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Cropping details and file type",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostFileDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FileIdDto"
            }
          }
        }
      }
    },
    "/api/files/{token}" : {
      "get" : {
        "tags" : [ "files" ],
        "summary" : "Get details of file",
        "description" : "",
        "operationId" : "fileInfoRoute",
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "token",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetFileInfo"
            }
          },
          "404" : {
            "description" : "No file matches the given query."
          }
        }
      }
    },
    "/api/invitations/{invitationId}/displayed" : {
      "post" : {
        "tags" : [ "invitation" ],
        "summary" : "Mark invitation as displayed",
        "description" : "",
        "operationId" : "postInvitationsDisplayedRoute",
        "parameters" : [ {
          "name" : "invitationId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Invitation updated"
          }
        }
      }
    },
    "/api/invitations/delete" : {
      "post" : {
        "tags" : [ "invitation" ],
        "summary" : "Delete invitations",
        "description" : "",
        "operationId" : "deleteInvitationsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DeleteInvitations"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitations deleted"
          },
          "404" : {
            "description" : "Invitations not found"
          }
        }
      }
    },
    "/api/invitations/{invitationToken}" : {
      "get" : {
        "tags" : [ "invitation" ],
        "summary" : "Invitation",
        "description" : "",
        "operationId" : "getInvitationRoute",
        "parameters" : [ {
          "name" : "invitationToken",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitation",
            "schema" : {
              "$ref" : "#/definitions/GetInvitation"
            }
          },
          "404" : {
            "description" : "Invitation for token not found"
          }
        }
      }
    },
    "/api/invitations" : {
      "get" : {
        "tags" : [ "invitation" ],
        "summary" : "Get all user invitations",
        "description" : "",
        "operationId" : "getInvitationsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetInvitation"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "invitation" ],
        "summary" : "Create invitation",
        "description" : "",
        "operationId" : "postInvitationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostInvitations"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetInvitation"
              }
            }
          },
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/invitations/{invitationId}/accept" : {
      "post" : {
        "tags" : [ "invitation" ],
        "summary" : "Accept invitation",
        "description" : "",
        "operationId" : "postInvitationAcceptRoute",
        "parameters" : [ {
          "name" : "invitationId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitation accepted"
          }
        }
      }
    },
    "/api/invitations/{invitationId}/reject" : {
      "post" : {
        "tags" : [ "invitation" ],
        "summary" : "Reject invitation",
        "description" : "",
        "operationId" : "postInvitationRejectRoute",
        "parameters" : [ {
          "name" : "invitationId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Invitation rejected"
          }
        }
      }
    },
    "/api/accounts/invoice-details" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get payout invoice details",
        "description" : "",
        "operationId" : "getInvoiceDetailsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceDetails"
            }
          }
        }
      }
    },
    "/api/accounts/invoice-details/natural-person" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Post payout invoice details for natural person",
        "description" : "",
        "operationId" : "postNaturalPersonDetailsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Invoice details for natural person",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostNaturalPersonDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceDetails"
            }
          },
          "201" : {
            "description" : "Invoice details created"
          }
        }
      }
    },
    "/api/accounts/invoice-details/company" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Post payout invoice details for company",
        "description" : "",
        "operationId" : "postCompanyDetailsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Invoice details for company",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostCompanyDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetInvoiceDetails"
            }
          },
          "201" : {
            "description" : "Invoice details created"
          }
        }
      }
    },
    "/api/invoices/{invoiceId}" : {
      "get" : {
        "tags" : [ "invoices" ],
        "summary" : "Get invoice",
        "description" : "",
        "operationId" : "getInvoiceRoute",
        "parameters" : [ {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoiceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetInvoice"
            }
          }
        }
      }
    },
    "/api/invoices/{invoiceId}/accept" : {
      "post" : {
        "tags" : [ "invoices" ],
        "summary" : "Accept partner invoice",
        "description" : "",
        "operationId" : "postAcceptInvoiceRoute",
        "parameters" : [ {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoiceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Invoice accepted"
          }
        }
      }
    },
    "/api/invoices/{invoiceId}/reject" : {
      "post" : {
        "tags" : [ "invoices" ],
        "summary" : "Reject partner invoice",
        "description" : "",
        "operationId" : "postRejectInvoiceRoute",
        "parameters" : [ {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoiceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Invoice rejected"
          }
        }
      }
    },
    "/api/payments/default-payment-method" : {
      "get" : {
        "tags" : [ "payments" ],
        "summary" : "Get default payment method",
        "description" : "",
        "operationId" : "getDefaultPaymentMethodRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Default payment method",
            "schema" : {
              "$ref" : "#/definitions/GetDefaultPaymentMethod"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "payments" ],
        "summary" : "Change default payment method",
        "description" : "",
        "operationId" : "putDefaultPaymentMethodRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "ChangeDefaultPaymentMethod",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PutDefaultPaymentMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Default payment method changed"
          }
        }
      }
    },
    "/api/payments/tpay/credit-cards" : {
      "get" : {
        "tags" : [ "payments" ],
        "summary" : "Get credit cards",
        "description" : "",
        "operationId" : "getCreditCardsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Credit cards",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetCreditCard"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      }
    },
    "/api/payments/tpay/credit-card" : {
      "post" : {
        "tags" : [ "payments" ],
        "summary" : "Add new credit card",
        "description" : "",
        "operationId" : "postCreditCardRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New card's data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostAddNewCard"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Credit card added",
            "schema" : {
              "$ref" : "#/definitions/ThreeDSecureUrl"
            }
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      }
    },
    "/api/payments/tpay/credit-card/{creditCardId}" : {
      "delete" : {
        "tags" : [ "payments" ],
        "summary" : "Delete credit card",
        "description" : "",
        "operationId" : "deleteCreditCardRoute",
        "parameters" : [ {
          "name" : "creditCardId",
          "in" : "path",
          "description" : "creditCardId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Credit card deleted"
          },
          "400" : {
            "description" : "Bad Request"
          }
        }
      }
    },
    "/api/payouts/payout-method" : {
      "get" : {
        "tags" : [ "payouts" ],
        "summary" : "Get payout method",
        "description" : "",
        "operationId" : "getPayoutMethodsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Payout method",
            "schema" : {
              "$ref" : "#/definitions/GetPayoutMethod"
            }
          },
          "404" : {
            "description" : "Payout method not found"
          }
        }
      },
      "put" : {
        "tags" : [ "payouts" ],
        "summary" : "Update payout method",
        "description" : "",
        "operationId" : "putPayoutMethodRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Payout method update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutPayoutMethod"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Payout method updated"
          }
        }
      }
    },
    "/api/adminpanel/potential-clients" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get potential clients",
        "description" : "",
        "operationId" : "getPotentialClientsRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetPotentialClient"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Create potential client",
        "description" : "",
        "operationId" : "postPotentialClientRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostPotentialClient"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Potential client created"
          }
        }
      }
    },
    "/api/presence/expert" : {
      "post" : {
        "tags" : [ "presence" ],
        "summary" : "Users presence status",
        "description" : "",
        "operationId" : "userPresenceRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "expertIds",
          "description" : "expertIds",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostExpertsPresence"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AccountPresenceStatus"
              }
            }
          }
        }
      }
    },
    "/api/presence/service" : {
      "post" : {
        "tags" : [ "presence" ],
        "summary" : "Services presence status",
        "description" : "",
        "operationId" : "servicePresenceRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "serviceIds",
          "description" : "serviceIds",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostServicesPresence"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ServicePresenceStatus"
              }
            }
          }
        }
      }
    },
    "/api/presence/notification/widget" : {
      "post" : {
        "tags" : [ "presence" ],
        "summary" : "Notify when widget is available",
        "description" : "",
        "operationId" : "widgetAvailabilityNotificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRegisterForWidgetAvailability"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Registered for notification"
          }
        }
      }
    },
    "/api/presence/expert/visible" : {
      "post" : {
        "tags" : [ "presence" ],
        "summary" : "Set expert as visible",
        "description" : "",
        "operationId" : "expertVisibleRoute",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "User visibility changed"
          }
        }
      }
    },
    "/api/presence/expert/invisible" : {
      "post" : {
        "tags" : [ "presence" ],
        "summary" : "Set expert as invisible",
        "description" : "",
        "operationId" : "expertInvisibleRoute",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "User visibility changed"
          }
        }
      }
    },
    "/api/presence/expert/visibility" : {
      "get" : {
        "tags" : [ "presence" ],
        "summary" : "Get expert visibility",
        "description" : "",
        "operationId" : "expertVisibilityRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetExpertVisibility"
            }
          }
        }
      }
    },
    "/api/profiles/invitations" : {
      "get" : {
        "tags" : [ "profile" ],
        "summary" : "Get all profile invitations",
        "description" : "",
        "operationId" : "getProfilesInvitationsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetProfileWithServicesInvitations"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{profileId}/employers/services" : {
      "get" : {
        "tags" : [ "profile" ],
        "summary" : "Get user employers profiles with services",
        "description" : "",
        "operationId" : "getEmployersProfilesWithServicesRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetProfileWithServices"
              }
            }
          }
        }
      }
    },
    "/api/profiles/{profileId}/favourite/expert" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Add profile to favourites",
        "description" : "",
        "operationId" : "postProfileFavouriteExpertRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Favourite created"
          },
          "409" : {
            "description" : "Favourite already exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "profile" ],
        "summary" : "Remove profile from favourites",
        "description" : "",
        "operationId" : "deleteProfileFavouriteExpertRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Favourite removed"
          }
        }
      }
    },
    "/api/profiles/{profileId}/favourite/organization" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Add profile to favourites",
        "description" : "",
        "operationId" : "postProfileFavouriteOrganizationRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Favourite created"
          },
          "409" : {
            "description" : "Favourite already exists"
          }
        }
      },
      "delete" : {
        "tags" : [ "profile" ],
        "summary" : "Remove profile from favourites",
        "description" : "",
        "operationId" : "deleteProfileFavouriteOrganizationRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Favourite removed"
          }
        }
      }
    },
    "/api/profiles/{profileId}/services" : {
      "get" : {
        "tags" : [ "profile" ],
        "summary" : "Get Details of profile with services",
        "description" : "",
        "operationId" : "getProfileWithServicesRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Profile",
            "schema" : {
              "$ref" : "#/definitions/GetProfileWithServices"
            }
          },
          "404" : {
            "description" : "No Profile matches the given query."
          }
        }
      }
    },
    "/api/profiles/validate" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Validate profile details",
        "description" : "",
        "operationId" : "postProfileValidateRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Profile details",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostProfileDetails"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Profile details OK"
          }
        }
      }
    },
    "/api/profiles" : {
      "post" : {
        "tags" : [ "profile" ],
        "summary" : "Create profile",
        "description" : "",
        "operationId" : "postCreateProfileWithInvoiceDetailsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Profile and invoice details",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostProfileWithInvoiceDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfile"
            }
          },
          "201" : {
            "description" : "Profile created"
          }
        }
      }
    },
    "/api/profiles/expert" : {
      "put" : {
        "tags" : [ "profile" ],
        "summary" : "Update expert",
        "description" : "",
        "operationId" : "putExpertProfileRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Expert details",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutExpertDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Expert profile updated",
            "schema" : {
              "$ref" : "#/definitions/GetProfile"
            }
          }
        }
      }
    },
    "/api/profiles/organization" : {
      "put" : {
        "tags" : [ "profile" ],
        "summary" : "Update organization",
        "description" : "",
        "operationId" : "putOrganizationProfileRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Organization details",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutOrganizationDetails"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Organization profile updated",
            "schema" : {
              "$ref" : "#/definitions/GetProfile"
            }
          }
        }
      }
    },
    "/api/profiles/{profileId}" : {
      "get" : {
        "tags" : [ "profile" ],
        "summary" : "Get Details of profile",
        "description" : "",
        "operationId" : "getProfileRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Profile",
            "schema" : {
              "$ref" : "#/definitions/GetProfileWithDocuments"
            }
          },
          "404" : {
            "description" : "No Profile matches the given query."
          }
        }
      }
    },
    "/api/adminpanel/promo-codes" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get promo codes",
        "description" : "",
        "operationId" : "getPromoCodesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "issuer",
          "in" : "query",
          "description" : "string",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "PromoCodeStatus",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "REDEEMED", "USED" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetPromoCode"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Create promo codes",
        "description" : "",
        "operationId" : "postPromoCodeRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostPromoCodes"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetPromoCode"
              }
            }
          }
        }
      }
    },
    "/api/adminpanel/promo-codes/used" : {
      "get" : {
        "tags" : [ "adminpanel" ],
        "summary" : "Get used promo codes",
        "description" : "",
        "operationId" : "getUsedPromoCodesRoute",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetUsedPromoCode"
              }
            }
          }
        }
      }
    },
    "/api/promo-codes/redeem" : {
      "post" : {
        "tags" : [ "promoCodes" ],
        "summary" : "Redeem promo code",
        "description" : "",
        "operationId" : "postRedeemPromoCodeRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRedeemPromoCode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Redeemed"
          }
        }
      }
    },
    "/api/promo-codes" : {
      "get" : {
        "tags" : [ "promoCodes" ],
        "summary" : "GET active promo codes",
        "description" : "",
        "operationId" : "getActivePromoCodesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Active promo codes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetPromoCode"
              }
            }
          }
        }
      }
    },
    "/api/ratel/call/{sueId}/room/create" : {
      "post" : {
        "tags" : [ "ratel" ],
        "summary" : "Create messenger room",
        "description" : "",
        "operationId" : "postRatelCreateRoomRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "ServiceUsageEventId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/RatelRoomDetails"
            }
          }
        }
      }
    },
    "/api/ratel/call/{sueId}/room/close" : {
      "post" : {
        "tags" : [ "ratel" ],
        "summary" : "Close messenger room",
        "description" : "",
        "operationId" : "postRatelCloseRoomRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "ServiceUsageEventId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/ratel/config/push-notification" : {
      "post" : {
        "tags" : [ "ratel" ],
        "summary" : "Mark session as registered on push notifications",
        "description" : "",
        "operationId" : "postRegisteredOnPushNotificationRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/ratel/call/create" : {
      "post" : {
        "tags" : [ "ratel" ],
        "summary" : "Create call",
        "description" : "",
        "operationId" : "postCreateCallRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateCallHook"
          }
        }, {
          "name" : "X-Device-Id",
          "in" : "header",
          "description" : "deviceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetSUERatelCall"
            }
          }
        }
      }
    },
    "/api/ratel/call/{sueId}/start" : {
      "post" : {
        "tags" : [ "ratel" ],
        "summary" : "Start call",
        "description" : "",
        "operationId" : "postStartCallRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "ServiceUsageEventId",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Device-Id",
          "in" : "header",
          "description" : "deviceId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostStartRatelCall"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/recover-password/verify/msisdn" : {
      "post" : {
        "tags" : [ "recoverPassword" ],
        "summary" : "Verify Msisdn token",
        "description" : "",
        "operationId" : "postRecoverPasswordVerifyMsisdnRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Verify Msisdn token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRecoverPasswordVerifyMsisdnToken"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Verify msisdn token"
          },
          "404" : {
            "description" : "Token not found"
          }
        }
      }
    },
    "/api/recover-password/verify/email" : {
      "post" : {
        "tags" : [ "recoverPassword" ],
        "summary" : "Verify email token",
        "description" : "",
        "operationId" : "postRecoverPasswordVerifyEmailRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Verify email token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRecoverPasswordVerifyEmailToken"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Verify email token",
            "schema" : {
              "$ref" : "#/definitions/GetMsisdn"
            }
          },
          "404" : {
            "description" : "Token not found"
          }
        }
      }
    },
    "/api/recover-password" : {
      "post" : {
        "tags" : [ "recoverPassword" ],
        "summary" : "Create recover password",
        "description" : "",
        "operationId" : "postRecoverPasswordRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New recover password",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRecoverPassword"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRecoverMethod"
            }
          },
          "201" : {
            "description" : "Recover password created"
          }
        }
      }
    },
    "/api/recover-password/msisdn" : {
      "put" : {
        "tags" : [ "recoverPassword" ],
        "summary" : "Update password",
        "description" : "",
        "operationId" : "putRecoverPasswordMsisdnRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "update password",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutRecoverPasswordMsisdn"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password updated"
          }
        }
      }
    },
    "/api/recover-password/email" : {
      "put" : {
        "tags" : [ "recoverPassword" ],
        "summary" : "Update password",
        "description" : "",
        "operationId" : "putRecoverPasswordEmailRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "update password",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutRecoverPasswordEmail"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password updated"
          }
        }
      }
    },
    "/api/registration/msisdn/verify" : {
      "post" : {
        "tags" : [ "registration" ],
        "summary" : "Request msisdn verification",
        "description" : "",
        "operationId" : "requestVerificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Registration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VerificationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRegistrationSession"
            }
          },
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/registration/msisdn/code" : {
      "post" : {
        "tags" : [ "registration" ],
        "summary" : "Confirm msisdn verification",
        "description" : "",
        "operationId" : "confirmVerificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Registration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VerificationConfirmation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/GetSessionWithAccount"
            }
          }
        }
      }
    },
    "/api/registration/msisdn/verify/code" : {
      "post" : {
        "tags" : [ "registration" ],
        "summary" : "Verify msisdn verification",
        "description" : "",
        "operationId" : "verifyVerificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Registration",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VerificationConfirmation"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Confirmed"
          },
          "404" : {
            "description" : "Token not found"
          }
        }
      }
    },
    "/api/registration/msisdn/check" : {
      "get" : {
        "tags" : [ "registration" ],
        "summary" : "Get registration status",
        "description" : "",
        "operationId" : "checkRegistrationStatusRoute",
        "parameters" : [ {
          "name" : "msisdn",
          "in" : "query",
          "description" : "Phone number",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetRegistrationStatus"
            }
          }
        }
      }
    },
    "/api/search/tags/suggestions" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Get tags suggestions",
        "description" : "",
        "operationId" : "postTagsSuggestionsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostSuggestTags"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSuggestedTags"
            }
          }
        }
      }
    },
    "/api/search/retrain" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Retrain search model",
        "description" : "",
        "operationId" : "postSearchRetrainRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostRetrainSearchEngine"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/search/resend-data" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Resend data to search",
        "description" : "",
        "operationId" : "postSearchResendDataRoute",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/search" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Search with query",
        "description" : "",
        "operationId" : "postSearchRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "query",
          "description" : "query parameters",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostSearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetSearchRequestResult"
              }
            }
          }
        }
      }
    },
    "/api/search/query/suggestions" : {
      "post" : {
        "tags" : [ "search" ],
        "summary" : "Get query suggestions",
        "description" : "",
        "operationId" : "postQueriesSuggestionsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PostSuggestQueries"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSuggestedQueries"
            }
          }
        }
      }
    },
    "/api/services/{serviceId}" : {
      "get" : {
        "tags" : [ "service" ],
        "summary" : "Get Details of a service",
        "description" : "",
        "operationId" : "getServiceRoute",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "serviceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetService"
            }
          },
          "404" : {
            "description" : "No Service matches the given query."
          }
        }
      },
      "put" : {
        "tags" : [ "service" ],
        "summary" : "Update Details of a service",
        "description" : "",
        "operationId" : "putServiceRoute",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "serviceId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "UpdateServiceDetails",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutService"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetService"
            }
          },
          "404" : {
            "description" : "No Service matches the given serviceId."
          }
        }
      },
      "delete" : {
        "tags" : [ "service" ],
        "summary" : "Remove service by id",
        "description" : "",
        "operationId" : "deleteServiceRoute",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "serviceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Service removed"
          },
          "404" : {
            "description" : "No such service found."
          }
        }
      }
    },
    "/api/services/employees" : {
      "post" : {
        "tags" : [ "service" ],
        "summary" : "Get Details of a service and employees",
        "description" : "",
        "operationId" : "postServiceWithEmployeesRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "serviceIds",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostServicesIds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetServiceWithEmployees"
              }
            }
          }
        }
      }
    },
    "/api/services/invitations" : {
      "post" : {
        "tags" : [ "service" ],
        "summary" : "Get services invitations",
        "description" : "You must be an service owner to list services invitations!",
        "operationId" : "postServiceInvitationsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "serviceIds",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostServicesIds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetServiceWithInvitations"
              }
            }
          }
        }
      }
    },
    "/api/services/profile/{accountId}" : {
      "get" : {
        "tags" : [ "service" ],
        "summary" : "Get Details of services of users",
        "description" : "",
        "operationId" : "getProfileServicesRoute",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "accountId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetService"
              }
            }
          },
          "404" : {
            "description" : "No such user found."
          }
        }
      }
    },
    "/api/services" : {
      "post" : {
        "tags" : [ "service" ],
        "summary" : "Create a service",
        "description" : "",
        "operationId" : "postServiceRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "UpdateServiceDetails",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostService"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetService"
            }
          }
        }
      }
    },
    "/api/services/tags" : {
      "post" : {
        "tags" : [ "service" ],
        "summary" : "Get services tags",
        "description" : "",
        "operationId" : "postServicesTagsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "UpdateServiceDetails",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostServicesIds"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetServiceTags"
              }
            }
          }
        }
      }
    },
    "/api/services/suggest/{expression}" : {
      "get" : {
        "tags" : [ "service" ],
        "summary" : "Get suggested employees",
        "description" : "",
        "operationId" : "getSuggestionsRoute",
        "parameters" : [ {
          "name" : "expression",
          "in" : "path",
          "description" : "expression",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetService"
              }
            }
          },
          "404" : {
            "description" : "No suggestions found."
          }
        }
      }
    },
    "/api/session" : {
      "get" : {
        "tags" : [ "session" ],
        "summary" : "Check login state",
        "description" : "",
        "operationId" : "checkRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSessionWithAccount"
            }
          },
          "401" : {
            "description" : "Not authorized"
          }
        }
      },
      "post" : {
        "tags" : [ "session" ],
        "summary" : "Login with username and password",
        "description" : "",
        "operationId" : "login",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "login",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LoginCredentials"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSessionWithAccount"
            }
          },
          "401" : {
            "description" : "Not authorized"
          }
        }
      },
      "delete" : {
        "tags" : [ "session" ],
        "summary" : "Logout from current session",
        "description" : "",
        "operationId" : "logoutCurrentRoute",
        "parameters" : [ ],
        "responses" : {
          "204" : {
            "description" : "Logged out"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/session/list" : {
      "get" : {
        "tags" : [ "session" ],
        "summary" : "Get active user sessions",
        "description" : "",
        "operationId" : "getSessionsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetSession"
              }
            }
          },
          "401" : {
            "description" : "Not authorized"
          }
        }
      }
    },
    "/api/session/{apiKey}" : {
      "delete" : {
        "tags" : [ "session" ],
        "summary" : "Logout from session with ApiKey",
        "description" : "",
        "operationId" : "logoutRoute",
        "parameters" : [ {
          "name" : "apiKey",
          "in" : "path",
          "description" : "apiKey",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Logged out"
          },
          "404" : {
            "description" : "Not found"
          }
        }
      }
    },
    "/api/accounts/settings/msisdn-verification/create" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Request new msisdn verification",
        "description" : "",
        "operationId" : "newMsisdnVerificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Create new msisdn verification",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateMsisdnVerificationRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created"
          }
        }
      }
    },
    "/api/accounts/settings/msisdn-verification/confirm" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Confirm msisdn verification",
        "description" : "",
        "operationId" : "confirmMsisdnVerificationRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Verification token",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ConfirmMsisdnVerificationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Verification completed"
          }
        }
      }
    },
    "/api/accounts/settings/countries" : {
      "get" : {
        "tags" : [ "account" ],
        "summary" : "Get all supported countries",
        "description" : "",
        "operationId" : "getSupportedCountriesRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Country"
              }
            }
          }
        }
      }
    },
    "/api/accounts/settings/change-password" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Change account password",
        "description" : "",
        "operationId" : "changePasswordRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Change account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeAccountPassword"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password changed"
          }
        }
      }
    },
    "/api/accounts/settings/mobile/change-password/sms" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Send SMS with code for password change",
        "description" : "",
        "operationId" : "sendPasswordChangeSmsRoute",
        "parameters" : [ ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/accounts/settings/mobile/change-password" : {
      "post" : {
        "tags" : [ "account" ],
        "summary" : "Change account password",
        "description" : "",
        "operationId" : "changePasswordMobileRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Change account object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ChangeAccountPasswordMobile"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password changed"
          }
        }
      }
    },
    "/api/accounts/settings/general" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Put general settings",
        "description" : "",
        "operationId" : "putGeneralSettingsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "General settings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutGeneralSettings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "General settings updated"
          }
        }
      }
    },
    "/api/accounts/settings/anonymity" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Put anonymity settings",
        "description" : "",
        "operationId" : "putAnonymitySettingsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Anonymity settings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutAnonymitySettings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "anonymity settings updated"
          }
        }
      }
    },
    "/api/accounts/settings/marketing" : {
      "put" : {
        "tags" : [ "account" ],
        "summary" : "Put marketing settings",
        "description" : "",
        "operationId" : "putMarketingSettingsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Marketing settings",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutMarketingSettings"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "marketing settings updated"
          }
        }
      }
    },
    "/api/service-usage-event/ratel-call/{ratelCallId}/details/expert" : {
      "get" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Get service usage event details for expert",
        "description" : "",
        "operationId" : "getSueDetailsForExpertRoute",
        "parameters" : [ {
          "name" : "ratelCallId",
          "in" : "path",
          "description" : "ratelCallId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetExpertSueDetails"
            }
          }
        }
      }
    },
    "/api/service-usage-event/{sueId}/rate" : {
      "post" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Create sue rating",
        "description" : "",
        "operationId" : "postSueRatingRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "PostSueRating",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostSueRating"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetSueRating"
            }
          },
          "404" : {
            "description" : "No usage event for given sueId"
          }
        }
      },
      "put" : {
        "tags" : [ "serviceUsageEvent" ],
        "summary" : "Update sue rating",
        "description" : "",
        "operationId" : "putSueRatingRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "PutSueRating",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PutSueRating"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Sue rating updated"
          },
          "404" : {
            "description" : "No usage event for given sueId"
          }
        }
      }
    },
    "/api/finances/profile/balance/expert" : {
      "get" : {
        "tags" : [ "finances" ],
        "summary" : "Get expert profile balance",
        "description" : "",
        "operationId" : "getExpertProfileBalanceRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Profile balance",
            "schema" : {
              "$ref" : "#/definitions/GetProfileBalance"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/api/finances/profile/balance/organization" : {
      "get" : {
        "tags" : [ "finances" ],
        "summary" : "Get organization profile balance",
        "description" : "",
        "operationId" : "getOrganizationProfileBalanceRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Profile balance",
            "schema" : {
              "$ref" : "#/definitions/GetProfileBalance"
            }
          },
          "401" : {
            "description" : "Unauthorized"
          }
        }
      }
    },
    "/api/finances/commissions" : {
      "post" : {
        "tags" : [ "finances" ],
        "summary" : "Get commissions",
        "description" : "",
        "operationId" : "postCommissionsRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "PostCommissions",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostCommissions"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Commissions",
            "schema" : {
              "$ref" : "#/definitions/GetCommissions"
            }
          }
        }
      }
    },
    "/api/version" : {
      "post" : {
        "tags" : [ "version" ],
        "summary" : "Check API version",
        "description" : "",
        "operationId" : "postVersionRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostVersion"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Version compatible"
          },
          "409" : {
            "description" : "Version incompatible"
          },
          "400" : {
            "description" : "Version malformed"
          }
        }
      }
    },
    "/api/views/dashboard/client/experts" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get client dashboard",
        "description" : "",
        "operationId" : "getDashboardClientExpertsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetDashboardClientExperts"
            }
          }
        }
      }
    },
    "/api/views/dashboard/activities/client/filters" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get dashboard activity filters for client",
        "description" : "",
        "operationId" : "getDashboardActivitiesClientFiltersRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetActivityFilters"
            }
          }
        }
      }
    },
    "/api/views/dashboard/activities/profile/filters" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get dashboard activity filters for profile",
        "description" : "",
        "operationId" : "getDashboardActivitiesProfileFiltersRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetActivityFilters"
            }
          }
        }
      }
    },
    "/api/views/dashboard/activities/client" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get dashboard activities for client",
        "description" : "",
        "operationId" : "getDashboardActivitiesClientRoute",
        "parameters" : [ {
          "name" : "activityType",
          "in" : "query",
          "description" : "ActivityType",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "AccountId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "serviceId",
          "in" : "query",
          "description" : "ServiceId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetClientActivities"
            }
          }
        }
      }
    },
    "/api/views/dashboard/activities/profile" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get dashboard activities for profile",
        "description" : "",
        "operationId" : "getDashboardActivitiesProfileRoute",
        "parameters" : [ {
          "name" : "activityType",
          "in" : "query",
          "description" : "ActivityType",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "profileId",
          "in" : "query",
          "description" : "AccountId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "serviceId",
          "in" : "query",
          "description" : "ServiceId",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateFrom",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dateTo",
          "in" : "query",
          "description" : "Instant",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Int",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetProfileActivities"
            }
          }
        }
      }
    },
    "/api/views/dashboard/sue/{sueId}/details" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get service usage event details",
        "description" : "",
        "operationId" : "getDashboardCallDetailsRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetCallDetails"
            }
          }
        }
      }
    },
    "/api/views/dashboard/payout/{payoutId}/details" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get payout details",
        "description" : "",
        "operationId" : "getDashboardPayoutDetailsRoute",
        "parameters" : [ {
          "name" : "payoutId",
          "in" : "path",
          "description" : "payoutId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPayoutDetails"
            }
          }
        }
      }
    },
    "/api/views/dashboard/sue/{sueId}/call-summary/client" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get call summary for client",
        "description" : "",
        "operationId" : "getClientCallSummaryRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ClientCallSummary"
            }
          }
        }
      }
    },
    "/api/views/dashboard/sue/{sueId}/call-summary/expert" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get call summary for expert",
        "description" : "",
        "operationId" : "getExpertCallSummaryRoute",
        "parameters" : [ {
          "name" : "sueId",
          "in" : "path",
          "description" : "sueId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExpertCallSummary"
            }
          }
        }
      }
    },
    "/api/views/mobile/profile/{profileId}/expert" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get simple expert profile",
        "description" : "",
        "operationId" : "getMobileExpertProfileRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SimpleExpertProfileView"
            }
          }
        }
      }
    },
    "/api/views/mobile/service/{serviceId}" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get service details",
        "description" : "",
        "operationId" : "getMobileServiceDetailsRoute",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "description" : "serviceId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetMobileServiceDetails"
            }
          }
        }
      }
    },
    "/api/views/mobile/profile/{profileId}/organization" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get simple organization profile",
        "description" : "",
        "operationId" : "getMobileOrganizationProfileRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SimpleOrganizationProfileView"
            }
          }
        }
      }
    },
    "/api/views/profile/{profileId}/expert" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get full expert profile",
        "description" : "",
        "operationId" : "getWebExpertProfileRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ExpertProfileView"
            }
          }
        }
      }
    },
    "/api/views/profile/{profileId}/organization" : {
      "get" : {
        "tags" : [ "views" ],
        "summary" : "Get full organization profile",
        "description" : "",
        "operationId" : "getWebOrganizationProfileRoute",
        "parameters" : [ {
          "name" : "profileId",
          "in" : "path",
          "description" : "profileId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrganizationProfileView"
            }
          }
        }
      }
    },
    "/api/widgets" : {
      "get" : {
        "tags" : [ "widget" ],
        "summary" : "Get details of a widget",
        "description" : "",
        "operationId" : "getWidgetsRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/GetWidget"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "widget" ],
        "summary" : "Generate a widget",
        "description" : "",
        "operationId" : "postGenerateWidgetRoute",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "PostGenerateWidget",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostGenerateWidget"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetWidget"
            }
          }
        }
      }
    },
    "/api/widgets/{widgetId}" : {
      "get" : {
        "tags" : [ "widget" ],
        "summary" : "Get details of a widget",
        "description" : "",
        "operationId" : "getWidgetRoute",
        "parameters" : [ {
          "name" : "widgetId",
          "in" : "path",
          "description" : "widgetId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetWidget"
            }
          },
          "404" : {
            "description" : "No widget matches the given query."
          }
        }
      }
    },
    "/api/ws/register" : {
      "get" : {
        "tags" : [ "ws" ],
        "summary" : "WebSocket message",
        "description" : "",
        "operationId" : "registerSessionRoute",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Empty"
          }
        }
      }
    }
  },
  "definitions" : {
    "Function1" : {
      "type" : "object"
    },
    "Function1RequestContextFutureRouteResult" : {
      "type" : "object"
    },
    "Account" : {
      "type" : "object",
      "required" : [ "countryISO", "currency", "details", "hasPassword", "id", "isAnonymous", "isBlocked", "msisdn", "registeredAt" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "msisdn" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "unverifiedEmail" : {
          "type" : "string",
          "readOnly" : true
        },
        "registeredAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "deletedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "isBlocked" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "hasPassword" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "isAnonymous" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "details" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAccountDetails"
        },
        "currency" : {
          "type" : "string",
          "readOnly" : true
        },
        "countryISO" : {
          "type" : "string",
          "readOnly" : true
        },
        "vatRateType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NATURAL_PERSON", "COMPANY_0", "COMPANY_23" ]
        }
      }
    },
    "GetAccountDetails" : {
      "type" : "object",
      "required" : [ "clientId" ],
      "properties" : {
        "clientId" : {
          "type" : "string",
          "readOnly" : true
        },
        "nickname" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PatchAccount" : {
      "type" : "object",
      "properties" : {
        "unverifiedEmail" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "currencyUnit" : {
          "type" : "string"
        },
        "countryISO" : {
          "type" : "string"
        }
      }
    },
    "GetSession" : {
      "type" : "object",
      "required" : [ "accountId", "apiKey", "ipAddress", "isExpired", "lastActivityAt" ],
      "properties" : {
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "apiKey" : {
          "type" : "string",
          "readOnly" : true
        },
        "userAgent" : {
          "type" : "string",
          "readOnly" : true
        },
        "ipAddress" : {
          "type" : "string",
          "readOnly" : true
        },
        "country" : {
          "type" : "string",
          "readOnly" : true
        },
        "city" : {
          "type" : "string",
          "readOnly" : true
        },
        "isExpired" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "lastActivityAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetSessionWithAccount" : {
      "type" : "object",
      "required" : [ "account", "isCompany", "isExpert", "session" ],
      "properties" : {
        "session" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetSession"
        },
        "account" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Account"
        },
        "isExpert" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "isCompany" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "BankAccountDto" : {
      "type" : "object",
      "required" : [ "accountNumber" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string"
        }
      }
    },
    "GetPayoutMethod" : {
      "type" : "object",
      "properties" : {
        "payPalAccount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/PayPalAccountDto"
        },
        "bankAccount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/BankAccountDto"
        }
      }
    },
    "GetProfileActivities" : {
      "type" : "object",
      "required" : [ "activities", "count" ],
      "properties" : {
        "activities" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetProfileActivity"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "GetProfileActivity" : {
      "type" : "object",
      "required" : [ "accountId", "activityType", "id", "initializedAt" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "payoutId" : {
          "type" : "string",
          "readOnly" : true
        },
        "activityType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "SERVICE_USAGE_EVENT", "PAYOUT", "REFUND" ]
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceName" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "isFreelanceService" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "serviceUsageDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ServiceUsageDetails"
        },
        "amount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "payoutMethod" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayoutMethod"
        },
        "payoutType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PROFILE", "PARTNER" ]
        },
        "invoiceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "initializedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "MoneyDto" : {
      "type" : "object",
      "required" : [ "currency", "value" ],
      "properties" : {
        "value" : {
          "type" : "integer",
          "format" : "int64"
        },
        "currency" : {
          "type" : "string"
        }
      }
    },
    "PayPalAccountDto" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "ServiceUsageDetails" : {
      "type" : "object",
      "required" : [ "expertAvatar", "expertName", "serviceUsageEventId" ],
      "properties" : {
        "expertAvatar" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertName" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceUsageEventId" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelRoomId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetClientActivities" : {
      "type" : "object",
      "required" : [ "activities", "count" ],
      "properties" : {
        "activities" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetClientActivity"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "GetClientActivity" : {
      "type" : "object",
      "required" : [ "accountId", "activityType", "id", "initializedAt" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "activityType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "SERVICE_USAGE_EVENT", "PAYOUT", "REFUND" ]
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceName" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceUsageDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ServiceUsageDetails"
        },
        "amount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "promoCodeAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "initializedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetImportantActivitiesCounters" : {
      "type" : "object",
      "required" : [ "clientActivitiesCount", "expertProfileActivitiesCount", "organizationProfileActivitiesCount" ],
      "properties" : {
        "clientActivitiesCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "expertProfileActivitiesCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "organizationProfileActivitiesCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "AdminPanelSession" : {
      "type" : "object",
      "required" : [ "accountId", "apiKey", "expiresAt", "isExpired", "lastActivityAt" ],
      "properties" : {
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "apiKey" : {
          "type" : "string",
          "readOnly" : true
        },
        "isExpired" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "lastActivityAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "AdminPanelLogin" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "GetInvoice" : {
      "type" : "object",
      "required" : [ "accountId", "email", "id", "invoiceType", "status" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "invoiceType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PROFILE", "PARTNER" ]
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "AUTO_ACCEPTED", "ACCEPTED", "REJECTED" ]
        },
        "downloadUrl" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetExpertDetails" : {
      "type" : "object",
      "required" : [ "avatar", "description", "links", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "links" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetOrganizationDetails" : {
      "type" : "object",
      "required" : [ "description", "links", "logo", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "logo" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "links" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetProfile" : {
      "type" : "object",
      "required" : [ "id", "isActive" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "isActive" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "expertDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetExpertDetails"
        },
        "organizationDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetOrganizationDetails"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "required" : [ "city", "countryISO", "postalCode", "street", "streetNumber" ],
      "properties" : {
        "street" : {
          "type" : "string"
        },
        "streetNumber" : {
          "type" : "string"
        },
        "apartmentNumber" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        },
        "countryISO" : {
          "type" : "string"
        }
      }
    },
    "GetInvoiceDetails" : {
      "type" : "object",
      "required" : [ "accountId", "address", "createdAt", "id", "invoiceDetailsType", "vatRateType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "invoiceDetailsType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "COMPANY", "NATURAL_PERSON" ]
        },
        "firstName" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastName" : {
          "type" : "string",
          "readOnly" : true
        },
        "companyName" : {
          "type" : "string",
          "readOnly" : true
        },
        "vatNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "address" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Address"
        },
        "vatRateType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NATURAL_PERSON", "COMPANY_0", "COMPANY_23" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetPayoutAmount" : {
      "type" : "object",
      "required" : [ "partner", "profile" ],
      "properties" : {
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "partner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        }
      }
    },
    "GetProfileWithPayoutDetails" : {
      "type" : "object",
      "required" : [ "expPayoutAmount", "msisdn", "orgPayoutAmount", "profile" ],
      "properties" : {
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "msisdn" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "invoiceDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetInvoiceDetails"
        },
        "payoutMethod" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayoutMethod"
        },
        "expPayoutAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayoutAmount"
        },
        "orgPayoutAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayoutAmount"
        }
      }
    },
    "GetTechnicalProblem" : {
      "type" : "object",
      "required" : [ "accountId", "id", "problemType", "sueId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "problemType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CONNECTION_INTERRUPTED", "CHAT_PROBLEM", "IMAGE_OR_SOUND_PROBLEM", "AUTO_DISCONNECT", "OTHER" ]
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetActivities" : {
      "type" : "object",
      "required" : [ "clientActivities", "profileActivities" ],
      "properties" : {
        "clientActivities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GetClientActivity"
          }
        },
        "profileActivities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GetProfileActivity"
          }
        }
      }
    },
    "GetAnswer" : {
      "type" : "object",
      "required" : [ "content", "createdAt" ],
      "properties" : {
        "content" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetCallDetails" : {
      "type" : "object",
      "required" : [ "clientDetails", "expertProfile", "isRecommendable", "isRecommended", "recommendedTags", "service", "serviceOwnerProfile", "serviceUsageDetails" ],
      "properties" : {
        "isRecommended" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "rate" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "POSITIVE", "NEGATIVE" ]
        },
        "isRecommendable" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "recommendedTags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetTag"
          }
        },
        "comment" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetCommentDetails"
        },
        "clientDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAccountDetails"
        },
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "serviceOwnerProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "serviceUsageDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetServiceUsageDetails"
        }
      }
    },
    "GetCommentDetails" : {
      "type" : "object",
      "required" : [ "commentId", "content", "createdAt" ],
      "properties" : {
        "commentId" : {
          "type" : "string",
          "readOnly" : true
        },
        "content" : {
          "type" : "string",
          "readOnly" : true
        },
        "answer" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAnswer"
        },
        "report" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetReport"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetReport" : {
      "type" : "object",
      "required" : [ "cause", "status" ],
      "properties" : {
        "cause" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "FALSE_COMMENT", "OFFENSIVE_COMMENT", "SPAM_COMMENT" ]
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "ACCEPTED", "REJECTED" ]
        }
      }
    },
    "GetService" : {
      "type" : "object",
      "required" : [ "createdAt", "description", "id", "isFreelance", "isSuspended", "language", "name", "ownerId", "price" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "ownerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "price" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "language" : {
          "type" : "string",
          "readOnly" : true
        },
        "isSuspended" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "isFreelance" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "deletedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetServiceUsageDetails" : {
      "type" : "object",
      "required" : [ "answeredAt", "callDuration", "ratePerMinute", "ratelCallId", "serviceUsageEventId" ],
      "properties" : {
        "serviceUsageEventId" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelCallId" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelRoomId" : {
          "type" : "string",
          "readOnly" : true
        },
        "answeredAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "ratePerMinute" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "amount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "callDuration" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "GetTag" : {
      "type" : "object",
      "required" : [ "id", "name", "status" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "ACCEPTED", "REJECTED" ]
        }
      }
    },
    "GetCounters" : {
      "type" : "object",
      "required" : [ "clientsCount", "companiesCount", "expertsCount", "paidSueCount", "profilesCount", "sueCount" ],
      "properties" : {
        "profilesCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "clientsCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "expertsCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "companiesCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "sueCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "paidSueCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "GetProfileBalance" : {
      "type" : "object",
      "required" : [ "partnerAmount", "partnerBlockedAmount", "profileAmount", "profileBlockedAmount" ],
      "properties" : {
        "profileAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "partnerAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "profileBlockedAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "partnerBlockedAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        }
      }
    },
    "GetPayout" : {
      "type" : "object",
      "required" : [ "accountId", "amount", "createdAt", "id", "payoutType", "profileId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "profileId" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "amount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "payoutType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PROFILE", "PARTNER" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostPayout" : {
      "type" : "object",
      "required" : [ "payoutType" ],
      "properties" : {
        "payoutType" : {
          "type" : "string",
          "enum" : [ "PROFILE", "PARTNER" ]
        }
      }
    },
    "PostAdminPanelAccount" : {
      "type" : "object",
      "required" : [ "email", "password", "role" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string",
          "enum" : [ "ADMIN", "ACCOUNTANT", "USER" ]
        }
      }
    },
    "PutPassword" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "PutRole" : {
      "type" : "object",
      "required" : [ "email", "role" ],
      "properties" : {
        "email" : {
          "type" : "string"
        },
        "role" : {
          "type" : "string",
          "enum" : [ "ADMIN", "ACCOUNTANT", "USER" ]
        }
      }
    },
    "GetAdminPanelAccount" : {
      "type" : "object",
      "required" : [ "email", "id", "registeredAt", "role" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "role" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "ADMIN", "ACCOUNTANT", "USER" ]
        },
        "registeredAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostTechnicalProblem" : {
      "type" : "object",
      "required" : [ "problemType" ],
      "properties" : {
        "problemType" : {
          "type" : "string",
          "enum" : [ "CONNECTION_INTERRUPTED", "CHAT_PROBLEM", "IMAGE_OR_SOUND_PROBLEM", "AUTO_DISCONNECT", "OTHER" ]
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "PostCommentAnswer" : {
      "type" : "object",
      "required" : [ "content" ],
      "properties" : {
        "content" : {
          "type" : "string"
        }
      }
    },
    "PostCommentReport" : {
      "type" : "object",
      "required" : [ "cause" ],
      "properties" : {
        "cause" : {
          "type" : "string",
          "enum" : [ "FALSE_COMMENT", "OFFENSIVE_COMMENT", "SPAM_COMMENT" ]
        }
      }
    },
    "PostComment" : {
      "type" : "object",
      "required" : [ "content" ],
      "properties" : {
        "content" : {
          "type" : "string"
        }
      }
    },
    "GetClientComplaint" : {
      "type" : "object",
      "required" : [ "clientId", "complaintType", "expertId", "id", "message", "status", "sueId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "clientId" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "rejectReason" : {
          "type" : "string",
          "readOnly" : true
        },
        "complaintType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "INCOMPETENT_EXPERT", "IMPOLITE_EXPERT", "TECHNICAL_ISSUES", "OTHER" ]
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "REJECTED_BY_EXPERT", "ACCEPTED_BY_EXPERT", "REJECTED_BY_ADMIN", "ACCEPTED_BY_ADMIN", "CANCELLED", "IGNORED_BY_EXPERT" ]
        }
      }
    },
    "GetExpertComplaint" : {
      "type" : "object",
      "required" : [ "clientId", "expertId", "id", "message", "sueId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "clientId" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PostClientComplaint" : {
      "type" : "object",
      "required" : [ "complaintType", "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "complaintType" : {
          "type" : "string",
          "enum" : [ "INCOMPETENT_EXPERT", "IMPOLITE_EXPERT", "TECHNICAL_ISSUES", "OTHER" ]
        }
      }
    },
    "PostExpertRejectComplaint" : {
      "type" : "object",
      "required" : [ "reason" ],
      "properties" : {
        "reason" : {
          "type" : "string"
        }
      }
    },
    "PostExpertComplaint" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        }
      }
    },
    "ExpertProfile" : {
      "type" : "object",
      "required" : [ "avatar", "description", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ExpertProfileWithEmployments" : {
      "type" : "object",
      "required" : [ "employments", "expertProfile" ],
      "properties" : {
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ExpertProfile"
        },
        "employments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetEmployment"
          }
        }
      }
    },
    "GetEmployment" : {
      "type" : "object",
      "required" : [ "commentCounter", "createdAt", "employeeId", "id", "ratingCounter", "serviceId", "serviceOwnerId", "usageCounter" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "employeeId" : {
          "type" : "string",
          "readOnly" : true
        },
        "usageCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "commentCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "ratingCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetComment" : {
      "type" : "object",
      "required" : [ "callDurationInSeconds", "clientDetails", "commentId", "content", "createdAt", "expertId", "sueId" ],
      "properties" : {
        "commentId" : {
          "type" : "string",
          "readOnly" : true
        },
        "content" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "answer" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAnswer"
        },
        "report" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetReport"
        },
        "callDurationInSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "clientDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAccountDetails"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "DeleteEmployments" : {
      "type" : "object",
      "required" : [ "employmentIds" ],
      "properties" : {
        "employmentIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "FileIdDto" : {
      "type" : "object",
      "required" : [ "fileId" ],
      "properties" : {
        "fileId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "CropDetails" : {
      "type" : "object",
      "required" : [ "height", "width", "x", "y" ],
      "properties" : {
        "x" : {
          "type" : "integer",
          "format" : "int32"
        },
        "y" : {
          "type" : "integer",
          "format" : "int32"
        },
        "width" : {
          "type" : "integer",
          "format" : "int32"
        },
        "height" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "PostFileDetails" : {
      "type" : "object",
      "required" : [ "fileType" ],
      "properties" : {
        "croppingDetails" : {
          "$ref" : "#/definitions/CropDetails"
        },
        "fileType" : {
          "type" : "string",
          "enum" : [ "PROFILE", "CHAT" ]
        }
      }
    },
    "GetFileInfo" : {
      "type" : "object",
      "required" : [ "accountId", "contentType", "createdAt", "fileType", "id", "isUploaded", "previews", "status", "token" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "token" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "isUploaded" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "ACCEPTED", "REJECTED" ]
        },
        "fileType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PROFILE", "CHAT" ]
        },
        "downloadUrl" : {
          "type" : "string",
          "readOnly" : true
        },
        "previews" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "contentType" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "DeleteInvitations" : {
      "type" : "object",
      "required" : [ "invitationsIds" ],
      "properties" : {
        "invitationsIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetInvitation" : {
      "type" : "object",
      "required" : [ "createdAt", "id", "serviceId", "serviceName", "serviceOwnerId", "status", "updatedAt" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceName" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "msisdn" : {
          "type" : "string",
          "readOnly" : true
        },
        "employeeId" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "ACCEPTED", "REJECTED", "DELETED" ]
        },
        "displayedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostInvitation" : {
      "type" : "object",
      "required" : [ "serviceId" ],
      "properties" : {
        "serviceId" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "msisdn" : {
          "type" : "string"
        },
        "employeeId" : {
          "type" : "string"
        }
      }
    },
    "PostInvitations" : {
      "type" : "object",
      "required" : [ "invitations" ],
      "properties" : {
        "invitations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PostInvitation"
          }
        }
      }
    },
    "PostNaturalPersonDetails" : {
      "type" : "object",
      "required" : [ "address", "firstName", "lastName" ],
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "PostCompanyDetails" : {
      "type" : "object",
      "required" : [ "address", "companyName", "vatNumber", "vatRateType" ],
      "properties" : {
        "companyName" : {
          "type" : "string"
        },
        "vatNumber" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/Address"
        },
        "vatRateType" : {
          "type" : "string",
          "enum" : [ "COMPANY_0", "COMPANY_23" ]
        }
      }
    },
    "PutDefaultPaymentMethod" : {
      "type" : "object",
      "properties" : {
        "creditCardId" : {
          "type" : "string"
        },
        "promoCodeId" : {
          "type" : "string"
        }
      }
    },
    "GetDefaultPaymentMethod" : {
      "type" : "object",
      "properties" : {
        "creditCardId" : {
          "type" : "string",
          "readOnly" : true
        },
        "promoCodeId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetCreditCard" : {
      "type" : "object",
      "required" : [ "cardType", "createdAt", "expiryDate", "id", "maskedNumber" ],
      "properties" : {
        "maskedNumber" : {
          "type" : "string",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expiryDate" : {
          "type" : "string",
          "readOnly" : true
        },
        "cardType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "AMEX", "DINERS", "MASTERCARD", "VISA", "OTHER" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ThreeDSecureUrl" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PostAddNewCard" : {
      "type" : "object",
      "required" : [ "cardType", "email", "encryptedCard", "expiryDate", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "encryptedCard" : {
          "type" : "string"
        },
        "expiryDate" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string",
          "enum" : [ "AMEX", "DINERS", "MASTERCARD", "VISA", "OTHER" ]
        },
        "language" : {
          "type" : "string",
          "enum" : [ "pl", "en" ]
        },
        "redirectUrlOnSuccess" : {
          "type" : "string"
        },
        "redirectUrlOnFailure" : {
          "type" : "string"
        }
      }
    },
    "PutPayoutMethod" : {
      "type" : "object",
      "properties" : {
        "payPalAccount" : {
          "$ref" : "#/definitions/PayPalAccountDto"
        },
        "bankAccount" : {
          "$ref" : "#/definitions/BankAccountDto"
        }
      }
    },
    "GetPotentialClient" : {
      "type" : "object",
      "required" : [ "createdAt", "email", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "email" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostPotentialClient" : {
      "type" : "object",
      "required" : [ "email" ],
      "properties" : {
        "email" : {
          "type" : "string"
        }
      }
    },
    "AccountPresenceStatus" : {
      "type" : "object",
      "required" : [ "expertId", "status", "updatedAt" ],
      "properties" : {
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "available", "unavailable", "busy" ]
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostExpertsPresence" : {
      "type" : "object",
      "required" : [ "expertIds" ],
      "properties" : {
        "expertIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ServicePresenceStatus" : {
      "type" : "object",
      "required" : [ "presenceList", "serviceId" ],
      "properties" : {
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "presenceList" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/AccountPresenceStatus"
          }
        }
      }
    },
    "PostServicesPresence" : {
      "type" : "object",
      "required" : [ "servicesIds" ],
      "properties" : {
        "servicesIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PostRegisterForWidgetAvailability" : {
      "type" : "object",
      "required" : [ "expertId", "serviceId", "widgetId" ],
      "properties" : {
        "expertId" : {
          "type" : "string"
        },
        "serviceId" : {
          "type" : "string"
        },
        "widgetId" : {
          "type" : "string"
        }
      }
    },
    "GetExpertVisibility" : {
      "type" : "object",
      "required" : [ "visibility" ],
      "properties" : {
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "visible", "invisible" ]
        }
      }
    },
    "GetProfileWithServicesInvitations" : {
      "type" : "object",
      "required" : [ "profile", "services" ],
      "properties" : {
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetServiceWithInvitation"
          }
        }
      }
    },
    "GetServiceWithInvitation" : {
      "type" : "object",
      "required" : [ "invitation", "service" ],
      "properties" : {
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "invitation" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetInvitation"
        }
      }
    },
    "GetProfileWithServices" : {
      "type" : "object",
      "required" : [ "profile", "services" ],
      "properties" : {
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetService"
          }
        }
      }
    },
    "PostProfileDetails" : {
      "type" : "object",
      "required" : [ "avatar", "description", "files", "links", "name", "profileType" ],
      "properties" : {
        "profileType" : {
          "type" : "string",
          "enum" : [ "EXP", "ORG" ]
        },
        "name" : {
          "type" : "string"
        },
        "avatar" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "files" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PostProfileWithInvoiceDetails" : {
      "type" : "object",
      "required" : [ "profileDetails" ],
      "properties" : {
        "profileDetails" : {
          "$ref" : "#/definitions/PostProfileDetails"
        },
        "naturalPersonDetails" : {
          "$ref" : "#/definitions/PostNaturalPersonDetails"
        },
        "companyDetails" : {
          "$ref" : "#/definitions/PostCompanyDetails"
        }
      }
    },
    "PutExpertDetails" : {
      "type" : "object",
      "required" : [ "avatar", "description", "files", "links", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "avatar" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "files" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PutOrganizationDetails" : {
      "type" : "object",
      "required" : [ "description", "files", "links", "logo", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "logo" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "files" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "links" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetProfileWithDocuments" : {
      "type" : "object",
      "required" : [ "expertDocuments", "organizationDocuments", "profile" ],
      "properties" : {
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "expertDocuments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProfileDocument"
          }
        },
        "organizationDocuments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProfileDocument"
          }
        }
      }
    },
    "ProfileDocument" : {
      "type" : "object",
      "required" : [ "contentType", "previews", "token" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "token" : {
          "type" : "string",
          "readOnly" : true
        },
        "previews" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "contentType" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetPromoCode" : {
      "type" : "object",
      "required" : [ "amount", "createdAt", "expiresAt", "id", "issuer", "status", "token" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "token" : {
          "type" : "string",
          "readOnly" : true
        },
        "amount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "issuer" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "REDEEMED", "USED" ]
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostPromoCodes" : {
      "type" : "object",
      "required" : [ "amount", "issuer", "quantity" ],
      "properties" : {
        "quantity" : {
          "type" : "integer",
          "format" : "int32"
        },
        "amount" : {
          "$ref" : "#/definitions/MoneyDto"
        },
        "issuer" : {
          "type" : "string"
        },
        "expiresAt" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "GetUsedPromoCode" : {
      "type" : "object",
      "required" : [ "accountId", "createdAt", "fullAmount", "id", "issuer", "token", "usedAmount" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "token" : {
          "type" : "string",
          "readOnly" : true
        },
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "fullAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "usedAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "issuer" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "updatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostRedeemPromoCode" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        }
      }
    },
    "RatelRoomDetails" : {
      "type" : "object",
      "required" : [ "id", "name", "orgId", "users" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "readOnly" : true
        },
        "users" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetSUERatelCall" : {
      "type" : "object",
      "required" : [ "callDetails", "expert", "service", "sue" ],
      "properties" : {
        "sue" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetServiceUsageEvent"
        },
        "callDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/RatelCallDetails"
        },
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "expert" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        }
      }
    },
    "GetServiceUsageEvent" : {
      "type" : "object",
      "required" : [ "clientId", "createdAt", "expertId", "freeSeconds", "id", "isRejected", "ratePerMinute", "ratelCallId", "serviceId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelCallId" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelRoomId" : {
          "type" : "string",
          "readOnly" : true
        },
        "clientId" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "isRejected" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "startedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "answeredAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "stoppedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "wentOfflineAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "offlineDuration" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "ratePerMinute" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "freeSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "RatelCallDetails" : {
      "type" : "object",
      "required" : [ "created", "id", "orgId" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "readOnly" : true
        },
        "created" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "ended" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "CreateCallHook" : {
      "type" : "object",
      "required" : [ "expertId", "serviceId" ],
      "properties" : {
        "expertId" : {
          "type" : "string"
        },
        "serviceId" : {
          "type" : "string"
        }
      }
    },
    "Json" : {
      "type" : "object",
      "required" : [ "array", "boolean", "null", "number", "object", "string" ],
      "properties" : {
        "object" : {
          "type" : "boolean"
        },
        "number" : {
          "type" : "boolean"
        },
        "boolean" : {
          "type" : "boolean"
        },
        "string" : {
          "type" : "boolean"
        },
        "array" : {
          "type" : "boolean"
        },
        "null" : {
          "type" : "boolean"
        }
      }
    },
    "PostStartRatelCall" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "$ref" : "#/definitions/Json"
        }
      }
    },
    "PostRecoverPasswordVerifyMsisdnToken" : {
      "type" : "object",
      "required" : [ "msisdn", "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        },
        "msisdn" : {
          "type" : "string"
        }
      }
    },
    "GetMsisdn" : {
      "type" : "object",
      "required" : [ "msisdn" ],
      "properties" : {
        "msisdn" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PostRecoverPasswordVerifyEmailToken" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        }
      }
    },
    "GetRecoverMethod" : {
      "type" : "object",
      "required" : [ "method" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "EMAIL", "SMS" ]
        }
      }
    },
    "PostRecoverPassword" : {
      "type" : "object",
      "required" : [ "msisdn" ],
      "properties" : {
        "msisdn" : {
          "type" : "string"
        },
        "method" : {
          "type" : "string",
          "enum" : [ "EMAIL", "SMS" ]
        }
      }
    },
    "PutRecoverPasswordMsisdn" : {
      "type" : "object",
      "required" : [ "msisdn", "password", "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        },
        "msisdn" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "PutRecoverPasswordEmail" : {
      "type" : "object",
      "required" : [ "password", "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "GetRegistrationSession" : {
      "type" : "object",
      "required" : [ "sessionId" ],
      "properties" : {
        "sessionId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "VerificationRequest" : {
      "type" : "object",
      "required" : [ "msisdn" ],
      "properties" : {
        "msisdn" : {
          "type" : "string"
        }
      }
    },
    "VerificationConfirmation" : {
      "type" : "object",
      "required" : [ "sessionId", "token" ],
      "properties" : {
        "sessionId" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "GetRegistrationStatus" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "UNREGISTERED", "VERIFICATION_ATTEMPTS_EXCEEDED", "NO_PASSWORD", "REGISTERED", "BLOCKED" ]
        }
      }
    },
    "GetSuggestedTags" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "tags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PostSuggestTags" : {
      "type" : "object",
      "required" : [ "query", "tags" ],
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "query" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "type" : "string"
        },
        "threshold" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PostRetrainSearchEngine" : {
      "type" : "object",
      "required" : [ "blockApi", "noLftm", "onlyReloadData" ],
      "properties" : {
        "blockApi" : {
          "type" : "boolean"
        },
        "onlyReloadData" : {
          "type" : "boolean"
        },
        "noLftm" : {
          "type" : "boolean"
        }
      }
    },
    "GetExpertDetailsSearchResponse" : {
      "type" : "object",
      "required" : [ "avatar", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetExpertProfileSearchResponse" : {
      "type" : "object",
      "required" : [ "avatar", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetProfileSearchResponse" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetExpertDetailsSearchResponse"
        },
        "organizationDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/OrganizationDetailsSearchResponse"
        }
      }
    },
    "GetSearchRequestResult" : {
      "type" : "object",
      "required" : [ "expertProfile", "ownerProfile", "service" ],
      "properties" : {
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetServiceSearchResult"
        },
        "ownerProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfileSearchResponse"
        },
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetExpertProfileSearchResponse"
        }
      }
    },
    "GetServiceSearchResult" : {
      "type" : "object",
      "required" : [ "id", "languages", "name", "ownerId", "price" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "ownerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "price" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "languages" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "OrganizationDetailsSearchResponse" : {
      "type" : "object",
      "required" : [ "logo", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "logo" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PostSearchRequest" : {
      "type" : "object",
      "required" : [ "count", "languages", "price", "query", "tags" ],
      "properties" : {
        "query" : {
          "type" : "string"
        },
        "price" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PriceSearchParam"
          }
        },
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "serviceType" : {
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "threshold" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PriceSearchParam" : {
      "type" : "object",
      "required" : [ "currency", "min" ],
      "properties" : {
        "currency" : {
          "type" : "string"
        },
        "max" : {
          "type" : "integer",
          "format" : "int64"
        },
        "min" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "GetSuggestedQueries" : {
      "type" : "object",
      "required" : [ "autocomplete", "suggestions" ],
      "properties" : {
        "autocomplete" : {
          "type" : "string",
          "readOnly" : true
        },
        "suggestions" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PostSuggestQueries" : {
      "type" : "object",
      "required" : [ "count", "query" ],
      "properties" : {
        "query" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "EmploymentWithExpertProfile" : {
      "type" : "object",
      "required" : [ "commentCounter", "createdAt", "employeeProfile", "id", "ratingCounter", "serviceId", "usageCounter", "vatRateType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "employeeProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ExpertProfile"
        },
        "vatRateType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NATURAL_PERSON", "COMPANY_0", "COMPANY_23" ]
        },
        "usageCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "commentCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "ratingCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "GetServiceWithEmployees" : {
      "type" : "object",
      "required" : [ "employeesDetails", "serviceDetails" ],
      "properties" : {
        "serviceDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ServiceWithOwnerProfile"
        },
        "employeesDetails" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/EmploymentWithExpertProfile"
          }
        }
      }
    },
    "ServiceWithOwnerProfile" : {
      "type" : "object",
      "required" : [ "createdAt", "description", "id", "isFreelance", "isSuspended", "language", "name", "ownerProfile", "price", "vatRateType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "ownerProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "vatRateType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NATURAL_PERSON", "COMPANY_0", "COMPANY_23" ]
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "price" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "language" : {
          "type" : "string",
          "readOnly" : true
        },
        "isSuspended" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "isFreelance" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "deletedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "PostServicesIds" : {
      "type" : "object",
      "required" : [ "serviceIds" ],
      "properties" : {
        "serviceIds" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetServiceWithInvitations" : {
      "type" : "object",
      "required" : [ "invitations", "service" ],
      "properties" : {
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "invitations" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetInvitation"
          }
        }
      }
    },
    "PostService" : {
      "type" : "object",
      "required" : [ "description", "isFreelance", "isOwnerEmployee", "language", "name", "price", "tags" ],
      "properties" : {
        "isOwnerEmployee" : {
          "type" : "boolean"
        },
        "isFreelance" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "price" : {
          "$ref" : "#/definitions/MoneyDto"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PostServiceTag"
          }
        },
        "language" : {
          "type" : "string"
        }
      }
    },
    "PostServiceTag" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "GetServiceTags" : {
      "type" : "object",
      "required" : [ "serviceId", "tags" ],
      "properties" : {
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "tags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetTag"
          }
        }
      }
    },
    "PutService" : {
      "type" : "object",
      "required" : [ "description", "isOwnerEmployee", "language", "name", "price", "tags" ],
      "properties" : {
        "isOwnerEmployee" : {
          "type" : "boolean"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "price" : {
          "$ref" : "#/definitions/MoneyDto"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PostServiceTag"
          }
        },
        "language" : {
          "type" : "string"
        }
      }
    },
    "LoginCredentials" : {
      "type" : "object",
      "required" : [ "password" ],
      "properties" : {
        "msisdn" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "CreateMsisdnVerificationRequest" : {
      "type" : "object",
      "required" : [ "unverifiedMsisdn" ],
      "properties" : {
        "unverifiedMsisdn" : {
          "type" : "string"
        }
      }
    },
    "ConfirmMsisdnVerificationRequest" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "type" : "string"
        }
      }
    },
    "Country" : {
      "type" : "object",
      "required" : [ "currency", "iso", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "iso" : {
          "type" : "string",
          "readOnly" : true
        },
        "currency" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ChangeAccountPassword" : {
      "type" : "object",
      "required" : [ "actualPassword", "newPassword" ],
      "properties" : {
        "actualPassword" : {
          "type" : "string"
        },
        "newPassword" : {
          "type" : "string"
        }
      }
    },
    "ChangeAccountPasswordMobile" : {
      "type" : "object",
      "required" : [ "newPassword", "token" ],
      "properties" : {
        "newPassword" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "PutGeneralSettings" : {
      "type" : "object",
      "properties" : {
        "nickname" : {
          "type" : "string"
        },
        "avatar" : {
          "type" : "string"
        }
      }
    },
    "PutAnonymitySettings" : {
      "type" : "object",
      "required" : [ "isAnonymous" ],
      "properties" : {
        "isAnonymous" : {
          "type" : "boolean"
        }
      }
    },
    "PutMarketingSettings" : {
      "type" : "object",
      "required" : [ "isMarketingAllowed" ],
      "properties" : {
        "isMarketingAllowed" : {
          "type" : "boolean"
        }
      }
    },
    "GetExpertSueDetails" : {
      "type" : "object",
      "required" : [ "callDuration", "clientDetails", "expertAvatar", "freeSeconds", "serviceId", "serviceName", "servicePrice", "sueId" ],
      "properties" : {
        "servicePrice" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "serviceName" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "ratelRoomId" : {
          "type" : "string",
          "readOnly" : true
        },
        "freeSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "callDuration" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "clientDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAccountDetails"
        },
        "expertAvatar" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetSueRating" : {
      "type" : "object",
      "required" : [ "clientId", "expertId", "id", "rate", "serviceId", "sueId", "tags" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "clientId" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "rate" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "POSITIVE", "NEGATIVE" ]
        },
        "tags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PostSueRating" : {
      "type" : "object",
      "required" : [ "rate" ],
      "properties" : {
        "rate" : {
          "type" : "string",
          "enum" : [ "POSITIVE", "NEGATIVE" ]
        }
      }
    },
    "PutSueRating" : {
      "type" : "object",
      "required" : [ "tags" ],
      "properties" : {
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "GetCommissions" : {
      "type" : "object",
      "required" : [ "profileAmount" ],
      "properties" : {
        "profileAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "partnerAmount" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        }
      }
    },
    "PostCommissions" : {
      "type" : "object",
      "required" : [ "amount", "isFreelance" ],
      "properties" : {
        "amount" : {
          "$ref" : "#/definitions/MoneyDto"
        },
        "isFreelance" : {
          "type" : "boolean"
        }
      }
    },
    "PostVersion" : {
      "type" : "object",
      "required" : [ "version" ],
      "properties" : {
        "version" : {
          "type" : "string"
        }
      }
    },
    "GetDashboardClientExperts" : {
      "type" : "object",
      "required" : [ "favouriteProfiles", "lastConsultations" ],
      "properties" : {
        "lastConsultations" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetLastConsultation"
          }
        },
        "favouriteProfiles" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetFavouriteProfile"
          }
        }
      }
    },
    "GetFavouriteProfile" : {
      "type" : "object",
      "required" : [ "profile", "profileFavourite" ],
      "properties" : {
        "profileFavourite" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ProfileFavourite"
        },
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        }
      }
    },
    "GetLastConsultation" : {
      "type" : "object",
      "required" : [ "profile", "service" ],
      "properties" : {
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "profile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        }
      }
    },
    "ProfileFavourite" : {
      "type" : "object",
      "required" : [ "accountId", "createdAt", "profileId", "profileType" ],
      "properties" : {
        "accountId" : {
          "type" : "string",
          "readOnly" : true
        },
        "profileId" : {
          "type" : "string",
          "readOnly" : true
        },
        "profileType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "EXP", "ORG" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ExpertFilter" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetActivityFilters" : {
      "type" : "object",
      "required" : [ "activityTypes", "experts", "services" ],
      "properties" : {
        "activityTypes" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "experts" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExpertFilter"
          }
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ServiceFilter"
          }
        }
      }
    },
    "ServiceFilter" : {
      "type" : "object",
      "required" : [ "expertId", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetPayoutDetails" : {
      "type" : "object",
      "required" : [ "payout", "payoutMethod" ],
      "properties" : {
        "payout" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayout"
        },
        "payoutMethod" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetPayoutMethod"
        }
      }
    },
    "ClientCallSummary" : {
      "type" : "object",
      "required" : [ "callDuration", "expertProfile", "isRecommendable", "service", "serviceOwnerProfile", "serviceTags", "sueId" ],
      "properties" : {
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "serviceTags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetTag"
          }
        },
        "creditCardCost" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "promoCodeCost" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "callDuration" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "isRecommendable" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "serviceOwnerProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "technicalProblem" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetTechnicalProblem"
        }
      }
    },
    "ExpertCallSummary" : {
      "type" : "object",
      "required" : [ "callDuration", "clientDetails", "profit", "service", "sueId" ],
      "properties" : {
        "sueId" : {
          "type" : "string",
          "readOnly" : true
        },
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "profit" : {
          "readOnly" : true,
          "$ref" : "#/definitions/MoneyDto"
        },
        "callDuration" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "clientDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetAccountDetails"
        }
      }
    },
    "ExpertProfileWithDocuments" : {
      "type" : "object",
      "required" : [ "avatar", "description", "documents", "id", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "avatar" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "documents" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProfileDocument"
          }
        }
      }
    },
    "SimpleExpertProfileView" : {
      "type" : "object",
      "required" : [ "expertProfile", "isFavourite", "services" ],
      "properties" : {
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ExpertProfileWithDocuments"
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetService"
          }
        },
        "isFavourite" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "GetMobileServiceDetails" : {
      "type" : "object",
      "required" : [ "employees", "ownerProfile", "service", "tags" ],
      "properties" : {
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "ownerProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetProfile"
        },
        "employees" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ExpertProfile"
          }
        },
        "tags" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetTag"
          }
        }
      }
    },
    "OrganizationProfileWithDocuments" : {
      "type" : "object",
      "required" : [ "description", "documents", "id", "logo", "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "logo" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "documents" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProfileDocument"
          }
        }
      }
    },
    "SimpleOrganizationProfileView" : {
      "type" : "object",
      "required" : [ "isFavourite", "organizationProfile", "services" ],
      "properties" : {
        "organizationProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/OrganizationProfileWithDocuments"
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetService"
          }
        },
        "isFavourite" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "EmploymentWithService" : {
      "type" : "object",
      "required" : [ "commentCounter", "createdAt", "employeeId", "id", "ratingCounter", "serviceDetails", "usageCounter", "vatRateType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceDetails" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ServiceWithOwnerProfile"
        },
        "vatRateType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NATURAL_PERSON", "COMPANY_0", "COMPANY_23" ]
        },
        "employeeId" : {
          "type" : "string",
          "readOnly" : true
        },
        "usageCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "commentCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "ratingCounter" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "rating" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ExpertProfileView" : {
      "type" : "object",
      "required" : [ "employments", "expertProfile", "isFavourite" ],
      "properties" : {
        "expertProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/ExpertProfileWithDocuments"
        },
        "employments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/EmploymentWithService"
          }
        },
        "isFavourite" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "OrganizationProfileView" : {
      "type" : "object",
      "required" : [ "isFavourite", "organizationProfile", "services" ],
      "properties" : {
        "organizationProfile" : {
          "readOnly" : true,
          "$ref" : "#/definitions/OrganizationProfileWithDocuments"
        },
        "services" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ServiceWithEmployments"
          }
        },
        "isFavourite" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "ServiceWithEmployments" : {
      "type" : "object",
      "required" : [ "employments", "service" ],
      "properties" : {
        "service" : {
          "readOnly" : true,
          "$ref" : "#/definitions/GetService"
        },
        "employments" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/EmploymentWithExpertProfile"
          }
        }
      }
    },
    "GetWidget" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "readOnly" : true
        },
        "expertId" : {
          "type" : "string",
          "readOnly" : true
        },
        "serviceId" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PostGenerateWidget" : {
      "type" : "object",
      "properties" : {
        "expertId" : {
          "type" : "string"
        },
        "serviceId" : {
          "type" : "string"
        }
      }
    }
  }
}